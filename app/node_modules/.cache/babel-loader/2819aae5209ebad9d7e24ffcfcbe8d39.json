{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan_\\\\stream-dolby-voxeet\\\\src\\\\screens\\\\Conference\\\\components\\\\ActionsButtons.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux'; // Selectors //\n\nimport { createStructuredSelector } from 'reselect';\nimport { makeSelectUnreadCount } from 'data/chat/selectors'; // Components //\n\nimport { ChatIcon, CloseIcon, HangUpIcon, MicOffIcon, MicOnIcon, VideoOffIcon, VideoOnIcon, PeopleIcon, SettingsIcon, ShareScreenIcon, ShareScreenOffIcon } from 'components/Icons';\nimport ActionButton from './ActionButton';\nconst Root = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 96px;\n    padding: 16px 48px;\n    margin-right: ${({\n  sidebarOpen\n}) => sidebarOpen ? 376 : 0}px;\n    transition: margin-right 250ms;\n`;\nconst MainControls = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\nconst Actions = styled.div`\n    display: flex;\n    align-items: center;\n    & > * + * {\n        margin-left: 16px;\n    }\n`;\n\nconst ActionButtons = ({\n  attendeesChatOpened,\n  attendeesListOpened,\n  attendeesSettingsOpened,\n  isMuted,\n  isScreenshare,\n  leave,\n  toggleAttendeesChat,\n  toggleAttendeesList,\n  toggleAttendeesSettings,\n  toggleMicrophone,\n  toggleScreenShare,\n  toggleVideo,\n  videoEnabled,\n  unreadCount,\n  ...props\n}) => {\n  console.log(props);\n  const sidebarOpen = attendeesChatOpened || attendeesListOpened;\n  return /*#__PURE__*/React.createElement(Root, {\n    sidebarOpen: sidebarOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    icon: attendeesSettingsOpened ? CloseIcon : SettingsIcon,\n    onClick: toggleAttendeesSettings,\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    icon: isScreenshare ? ShareScreenOffIcon : ShareScreenIcon,\n    onClick: toggleScreenShare,\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(MainControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    icon: isMuted ? MicOffIcon : MicOnIcon,\n    onClick: toggleMicrophone,\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    color: \"red\",\n    icon: HangUpIcon,\n    onClick: leave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    enabled: videoEnabled,\n    icon: videoEnabled ? VideoOnIcon : VideoOffIcon,\n    onClick: toggleVideo,\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    icon: attendeesListOpened ? CloseIcon : PeopleIcon,\n    onClick: toggleAttendeesList,\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ActionButton, {\n    showBadge: unreadCount > 0,\n    icon: attendeesChatOpened ? CloseIcon : ChatIcon,\n    onClick: toggleAttendeesChat,\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  unreadCount: makeSelectUnreadCount()\n});\nexport default connect(mapStateToProps)(ActionButtons);","map":{"version":3,"sources":["C:/Users/Evan_/stream-dolby-voxeet/src/screens/Conference/components/ActionsButtons.js"],"names":["React","styled","connect","createStructuredSelector","makeSelectUnreadCount","ChatIcon","CloseIcon","HangUpIcon","MicOffIcon","MicOnIcon","VideoOffIcon","VideoOnIcon","PeopleIcon","SettingsIcon","ShareScreenIcon","ShareScreenOffIcon","ActionButton","Root","div","sidebarOpen","MainControls","Actions","ActionButtons","attendeesChatOpened","attendeesListOpened","attendeesSettingsOpened","isMuted","isScreenshare","leave","toggleAttendeesChat","toggleAttendeesList","toggleAttendeesSettings","toggleMicrophone","toggleScreenShare","toggleVideo","videoEnabled","unreadCount","props","console","log","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\n// Selectors //\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { makeSelectUnreadCount } from 'data/chat/selectors';\r\n\r\n// Components //\r\nimport {\r\n    ChatIcon,\r\n    CloseIcon,\r\n    HangUpIcon,\r\n    MicOffIcon,\r\n    MicOnIcon,\r\n    VideoOffIcon,\r\n    VideoOnIcon,\r\n    PeopleIcon,\r\n    SettingsIcon,\r\n    ShareScreenIcon,\r\n    ShareScreenOffIcon,\r\n} from 'components/Icons';\r\nimport ActionButton from './ActionButton';\r\n\r\nconst Root = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 96px;\r\n    padding: 16px 48px;\r\n    margin-right: ${({ sidebarOpen }) => (sidebarOpen ? 376 : 0)}px;\r\n    transition: margin-right 250ms;\r\n`;\r\n\r\nconst MainControls = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst Actions = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    & > * + * {\r\n        margin-left: 16px;\r\n    }\r\n`;\r\n\r\nconst ActionButtons = ({\r\n    attendeesChatOpened,\r\n    attendeesListOpened,\r\n    attendeesSettingsOpened,\r\n    isMuted,\r\n    isScreenshare,\r\n    leave,\r\n    toggleAttendeesChat,\r\n    toggleAttendeesList,\r\n    toggleAttendeesSettings,\r\n    toggleMicrophone,\r\n    toggleScreenShare,\r\n    toggleVideo,\r\n    videoEnabled,\r\n    unreadCount,\r\n    ...props\r\n}) => {\r\n    console.log(props);\r\n    const sidebarOpen = attendeesChatOpened || attendeesListOpened;\r\n    return (\r\n        <Root sidebarOpen={sidebarOpen}>\r\n            <Actions>\r\n                <ActionButton\r\n                    icon={attendeesSettingsOpened ? CloseIcon : SettingsIcon}\r\n                    onClick={toggleAttendeesSettings}\r\n                    size={40}\r\n                />\r\n                <ActionButton\r\n                    icon={isScreenshare ? ShareScreenOffIcon : ShareScreenIcon}\r\n                    onClick={toggleScreenShare}\r\n                    size={40}\r\n                />\r\n            </Actions>\r\n            <MainControls>\r\n                <ActionButton icon={isMuted ? MicOffIcon : MicOnIcon} onClick={toggleMicrophone} size={40} />\r\n                <ActionButton color='red' icon={HangUpIcon} onClick={leave} />\r\n                <ActionButton\r\n                    enabled={videoEnabled}\r\n                    icon={videoEnabled ? VideoOnIcon : VideoOffIcon}\r\n                    onClick={toggleVideo}\r\n                    size={40}\r\n                />\r\n            </MainControls>\r\n            <Actions>\r\n                <ActionButton\r\n                    icon={attendeesListOpened ? CloseIcon : PeopleIcon}\r\n                    onClick={toggleAttendeesList}\r\n                    size={40}\r\n                />\r\n                <ActionButton\r\n                    showBadge={unreadCount > 0}\r\n                    icon={attendeesChatOpened ? CloseIcon : ChatIcon}\r\n                    onClick={toggleAttendeesChat}\r\n                    size={40}\r\n                />\r\n            </Actions>\r\n        </Root>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    unreadCount: makeSelectUnreadCount(),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ActionButtons);\r\n"]},"metadata":{},"sourceType":"module"}