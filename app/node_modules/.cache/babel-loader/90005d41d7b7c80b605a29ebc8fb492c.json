{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan_\\\\stream-dolby-voxeet\\\\src\\\\screens\\\\Conference\\\\components\\\\ActionButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'; // Components //\n\nconst Root = styled.div`\n    height: ${({\n  size\n}) => size}px;\n    width: ${({\n  size\n}) => size}px;\n    border-radius: 50%;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${({\n  theme\n}) => theme.color.slate};\n    cursor: pointer;\n    user-select: none;\n    transition: 200ms ease-out;\n\n    & + & {\n        margin-left: 16px;\n    }\n\n    &:hover {\n        background-color: ${({\n  theme\n}) => theme.colorUtils.lighten(theme.color.slate, 0.1)};\n    }\n`;\nconst Badge = styled.div`\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: ${({\n  theme\n}) => theme.color.red};\n    bottom: -16px;\n    left: 50%;\n    transform: translateX(-50%);\n`;\n\nconst ActionButton = ({\n  color,\n  enabled,\n  icon: Icon,\n  onClick,\n  showBadge,\n  size\n}) => /*#__PURE__*/React.createElement(Root, {\n  enabled: enabled,\n  size: size,\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  color: color,\n  size: size / 2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}), showBadge ? /*#__PURE__*/React.createElement(Badge, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 22\n  }\n}) : null);\n\nActionButton.propTypes = {\n  color: PropTypes.string,\n  enabled: PropTypes.bool,\n  icon: PropTypes.func.isRequired,\n  onClick: PropTypes.func,\n  showBadge: PropTypes.bool,\n  size: PropTypes.number.isRequired\n};\nActionButton.defaultProps = {\n  color: 'white',\n  enabled: false,\n  onClick: () => {},\n  size: 64\n};\nexport default ActionButton;","map":{"version":3,"sources":["C:/Users/Evan_/stream-dolby-voxeet/src/screens/Conference/components/ActionButton.js"],"names":["React","PropTypes","styled","Root","div","size","theme","color","slate","colorUtils","lighten","Badge","red","ActionButton","enabled","icon","Icon","onClick","showBadge","propTypes","string","bool","func","isRequired","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;cACV,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAAK;aACpB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;;;;;;wBAMR,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,KAAM;;;;;;;;;;4BAU7B,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,UAAN,CAAiBC,OAAjB,CAAyBJ,KAAK,CAACC,KAAN,CAAYC,KAArC,EAA4C,GAA5C,CAAiD;;CAlB5F;AAsBA,MAAMG,KAAK,GAAGT,MAAM,CAACE,GAAI;;;;;wBAKD,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYK,GAAI;;;;CALvD;;AAWA,MAAMC,YAAY,GAAG,CAAC;AAAEN,EAAAA,KAAF;AAASO,EAAAA,OAAT;AAAkBC,EAAAA,IAAI,EAAEC,IAAxB;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA,SAAvC;AAAkDb,EAAAA;AAAlD,CAAD,kBACjB,oBAAC,IAAD;AAAM,EAAA,OAAO,EAAES,OAAf;AAAwB,EAAA,IAAI,EAAET,IAA9B;AAAoC,EAAA,OAAO,EAAEY,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEV,KAAb;AAAoB,EAAA,IAAI,EAAEF,IAAI,GAAG,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEKa,SAAS,gBAAG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,GAAe,IAF7B,CADJ;;AAOAL,YAAY,CAACM,SAAb,GAAyB;AACrBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,MADI;AAErBN,EAAAA,OAAO,EAAEb,SAAS,CAACoB,IAFE;AAGrBN,EAAAA,IAAI,EAAEd,SAAS,CAACqB,IAAV,CAAeC,UAHA;AAIrBN,EAAAA,OAAO,EAAEhB,SAAS,CAACqB,IAJE;AAKrBJ,EAAAA,SAAS,EAAEjB,SAAS,CAACoB,IALA;AAMrBhB,EAAAA,IAAI,EAAEJ,SAAS,CAACuB,MAAV,CAAiBD;AANF,CAAzB;AASAV,YAAY,CAACY,YAAb,GAA4B;AACxBlB,EAAAA,KAAK,EAAE,OADiB;AAExBO,EAAAA,OAAO,EAAE,KAFe;AAGxBG,EAAAA,OAAO,EAAE,MAAM,CAAE,CAHO;AAIxBZ,EAAAA,IAAI,EAAE;AAJkB,CAA5B;AAOA,eAAeQ,YAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n// Components //\r\nconst Root = styled.div`\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    border-radius: 50%;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.color.slate};\r\n    cursor: pointer;\r\n    user-select: none;\r\n    transition: 200ms ease-out;\r\n\r\n    & + & {\r\n        margin-left: 16px;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.colorUtils.lighten(theme.color.slate, 0.1)};\r\n    }\r\n`;\r\n\r\nconst Badge = styled.div`\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    background-color: ${({ theme }) => theme.color.red};\r\n    bottom: -16px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n`;\r\n\r\nconst ActionButton = ({ color, enabled, icon: Icon, onClick, showBadge, size }) => (\r\n    <Root enabled={enabled} size={size} onClick={onClick}>\r\n        <Icon color={color} size={size / 2} />\r\n        {showBadge ? <Badge /> : null}\r\n    </Root>\r\n);\r\n\r\nActionButton.propTypes = {\r\n    color: PropTypes.string,\r\n    enabled: PropTypes.bool,\r\n    icon: PropTypes.func.isRequired,\r\n    onClick: PropTypes.func,\r\n    showBadge: PropTypes.bool,\r\n    size: PropTypes.number.isRequired,\r\n};\r\n\r\nActionButton.defaultProps = {\r\n    color: 'white',\r\n    enabled: false,\r\n    onClick: () => {},\r\n    size: 64,\r\n};\r\n\r\nexport default ActionButton;\r\n"]},"metadata":{},"sourceType":"module"}