{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nclass GetRef extends React.Component {\n  componentDidMount() {\n    this.ref = ReactDOM.findDOMNode(this);\n    this.props.rootRef(this.ref);\n  }\n\n  componentDidUpdate(prevProps) {\n    const ref = ReactDOM.findDOMNode(this);\n\n    if (prevProps.rootRef !== this.props.rootRef || this.ref !== ref) {\n      if (prevProps.rootRef !== this.props.rootRef) {\n        prevProps.rootRef(null);\n      }\n\n      this.ref = ref;\n      this.props.rootRef(this.ref);\n    }\n  }\n\n  componentWillUnmount() {\n    this.ref = null;\n    this.props.rootRef(null);\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nGetRef.propTypes = {\n  children: PropTypes.element,\n  // Provide a way to access the DOM node of the wrapped element.\n  // You can provide a callback ref or a `React.createRef()` ref.\n  rootRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n};\nexport default GetRef;","map":{"version":3,"sources":["C:/Users/Evan_/stream-dolby-voxeet/src/utils/GetRef.js"],"names":["React","ReactDOM","PropTypes","GetRef","Component","componentDidMount","ref","findDOMNode","props","rootRef","componentDidUpdate","prevProps","componentWillUnmount","render","children","propTypes","element","oneOfType","func","object","isRequired"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,GAAL,GAAWL,QAAQ,CAACM,WAAT,CAAqB,IAArB,CAAX;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKH,GAAxB;AACD;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAML,GAAG,GAAGL,QAAQ,CAACM,WAAT,CAAqB,IAArB,CAAZ;;AAEA,QAAII,SAAS,CAACF,OAAV,KAAsB,KAAKD,KAAL,CAAWC,OAAjC,IAA4C,KAAKH,GAAL,KAAaA,GAA7D,EAAkE;AAChE,UAAIK,SAAS,CAACF,OAAV,KAAsB,KAAKD,KAAL,CAAWC,OAArC,EAA8C;AAC5CE,QAAAA,SAAS,CAACF,OAAV,CAAkB,IAAlB;AACD;;AAED,WAAKH,GAAL,GAAWA,GAAX;AACA,WAAKE,KAAL,CAAWC,OAAX,CAAmB,KAAKH,GAAxB;AACD;AACF;;AAEDM,EAAAA,oBAAoB,GAAG;AACrB,SAAKN,GAAL,GAAW,IAAX;AACA,SAAKE,KAAL,CAAWC,OAAX,CAAmB,IAAnB;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKL,KAAL,CAAWM,QAAlB;AACD;;AA1BkC;;AA6BrCX,MAAM,CAACY,SAAP,GAAmB;AACjBD,EAAAA,QAAQ,EAAEZ,SAAS,CAACc,OADH;AAEjB;AACA;AACAP,EAAAA,OAAO,EAAEP,SAAS,CAACe,SAAV,CAAoB,CAACf,SAAS,CAACgB,IAAX,EAAiBhB,SAAS,CAACiB,MAA3B,CAApB,EAAwDC;AAJhD,CAAnB;AAOA,eAAejB,MAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass GetRef extends React.Component {\r\n  componentDidMount() {\r\n    this.ref = ReactDOM.findDOMNode(this);\r\n    this.props.rootRef(this.ref);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const ref = ReactDOM.findDOMNode(this);\r\n\r\n    if (prevProps.rootRef !== this.props.rootRef || this.ref !== ref) {\r\n      if (prevProps.rootRef !== this.props.rootRef) {\r\n        prevProps.rootRef(null);\r\n      }\r\n\r\n      this.ref = ref;\r\n      this.props.rootRef(this.ref);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.ref = null;\r\n    this.props.rootRef(null);\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nGetRef.propTypes = {\r\n  children: PropTypes.element,\r\n  // Provide a way to access the DOM node of the wrapped element.\r\n  // You can provide a callback ref or a `React.createRef()` ref.\r\n  rootRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\r\n};\r\n\r\nexport default GetRef;\r\n"]},"metadata":{},"sourceType":"module"}