{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evan_\\\\stream-dolby-voxeet\\\\src\\\\containers\\\\Snackbar\\\\Snackbar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport styled, { withTheme } from 'styled-components';\nimport Animated from 'animated/lib/targets/react-dom';\nimport Easing from 'animated/lib/Easing';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect'; // Utils //\n\nimport Portal from 'utils/Portal'; // Actions //\n\nimport { dismissSnackbar } from './actions'; // Components //\n\nimport * as snackbars from './snackbars';\nimport { makeSelectSnackbarData, makeSelectShowSnackbar, makeSelectSnackbarType } from './selectors';\nconst Root = styled(Animated.div)`\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    bottom: 32px;\n    left: 32px;\n    z-index: ${({\n  theme\n}) => theme.z.snackbar};\n`;\n\nclass Snackbar extends Component {\n  constructor(props) {\n    super(props);\n    this.anim = new Animated.Value(0);\n    this.state = {\n      mount: false\n    };\n    this.animateIn = this.animateIn.bind(this);\n    this.animateOut = this.animateOut.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      show\n    } = this.props;\n    if (show) this.animateIn();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      dismissSnackbar,\n      location,\n      show\n    } = this.props; // eslint-disable-line no-shadow\n\n    if (prevProps.location.pathname !== location.pathname && prevProps.show) {\n      dismissSnackbar();\n    }\n\n    if (!prevProps.show && show) {\n      this.animateIn();\n    } else if (prevProps.show && !show) {\n      this.animateOut();\n    }\n  }\n\n  animateIn() {\n    this.setState({\n      mount: true\n    }, () => {\n      Animated.timing(this.anim, {\n        toValue: 1,\n        duration: 200,\n        ease: Easing.inOut(Easing.cubic)\n      }).start();\n    });\n  }\n\n  animateOut() {\n    Animated.timing(this.anim, {\n      toValue: 0,\n      duration: 200,\n      ease: Easing.inOut(Easing.cubic)\n    }).start(() => {\n      this.setState({\n        mount: false\n      });\n    });\n  }\n\n  get rootStyle() {\n    return {\n      opacity: this.anim,\n      transform: [{\n        translateY: this.anim.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['110%', '0%']\n        })\n      }]\n    };\n  }\n\n  render() {\n    const {\n      color,\n      data,\n      type,\n      dismissSnackbar\n    } = this.props; // eslint-disable-line no-shadow\n\n    const {\n      mount\n    } = this.state;\n    const SnackbarComponent = snackbars[type];\n    return mount ? /*#__PURE__*/React.createElement(Portal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Root, {\n      style: this.rootStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SnackbarComponent, {\n      color: color,\n      data: data,\n      onClose: dismissSnackbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }))) : null;\n  }\n\n}\n\nSnackbar.propTypes = {\n  color: PropTypes.string,\n  data: PropTypes.object,\n  show: PropTypes.bool\n};\nSnackbar.defaultProps = {\n  color: 'white',\n  type: 'BasicSnackbar'\n};\nconst mapStateToProps = createStructuredSelector({\n  data: makeSelectSnackbarData(),\n  show: makeSelectShowSnackbar(),\n  type: makeSelectSnackbarType()\n});\nexport default compose(withTheme, withRouter, connect(mapStateToProps, {\n  dismissSnackbar\n}))(Snackbar);","map":{"version":3,"sources":["C:/Users/Evan_/stream-dolby-voxeet/src/containers/Snackbar/Snackbar.js"],"names":["React","Component","PropTypes","withRouter","styled","withTheme","Animated","Easing","connect","compose","createStructuredSelector","Portal","dismissSnackbar","snackbars","makeSelectSnackbarData","makeSelectShowSnackbar","makeSelectSnackbarType","Root","div","theme","z","snackbar","Snackbar","constructor","props","anim","Value","state","mount","animateIn","bind","animateOut","componentDidMount","show","componentDidUpdate","prevProps","location","pathname","setState","timing","toValue","duration","ease","inOut","cubic","start","rootStyle","opacity","transform","translateY","interpolate","inputRange","outputRange","render","color","data","type","SnackbarComponent","propTypes","string","object","bool","defaultProps","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport Animated from 'animated/lib/targets/react-dom';\r\nimport Easing from 'animated/lib/Easing';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\n// Utils //\r\nimport Portal from 'utils/Portal';\r\n\r\n// Actions //\r\nimport { dismissSnackbar } from './actions';\r\n\r\n// Components //\r\nimport * as snackbars from './snackbars';\r\nimport { makeSelectSnackbarData, makeSelectShowSnackbar, makeSelectSnackbarType } from './selectors';\r\n\r\nconst Root = styled(Animated.div)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    bottom: 32px;\r\n    left: 32px;\r\n    z-index: ${({ theme }) => theme.z.snackbar};\r\n`;\r\n\r\nclass Snackbar extends Component {\r\n    anim = new Animated.Value(0);\r\n\r\n    static propTypes = {\r\n        color: PropTypes.string,\r\n        data: PropTypes.object,\r\n        show: PropTypes.bool,\r\n    };\r\n\r\n    static defaultProps = {\r\n        color: 'white',\r\n        type: 'BasicSnackbar',\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mount: false,\r\n        };\r\n\r\n        this.animateIn = this.animateIn.bind(this);\r\n        this.animateOut = this.animateOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { show } = this.props;\r\n\r\n        if (show) this.animateIn();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { dismissSnackbar, location, show } = this.props; // eslint-disable-line no-shadow\r\n\r\n        if (prevProps.location.pathname !== location.pathname && prevProps.show) {\r\n            dismissSnackbar();\r\n        }\r\n\r\n        if (!prevProps.show && show) {\r\n            this.animateIn();\r\n        } else if (prevProps.show && !show) {\r\n            this.animateOut();\r\n        }\r\n    }\r\n\r\n    animateIn() {\r\n        this.setState(\r\n            {\r\n                mount: true,\r\n            },\r\n            () => {\r\n                Animated.timing(this.anim, {\r\n                    toValue: 1,\r\n                    duration: 200,\r\n                    ease: Easing.inOut(Easing.cubic),\r\n                }).start();\r\n            },\r\n        );\r\n    }\r\n\r\n    animateOut() {\r\n        Animated.timing(this.anim, {\r\n            toValue: 0,\r\n            duration: 200,\r\n            ease: Easing.inOut(Easing.cubic),\r\n        }).start(() => {\r\n            this.setState({\r\n                mount: false,\r\n            });\r\n        });\r\n    }\r\n\r\n    get rootStyle() {\r\n        return {\r\n            opacity: this.anim,\r\n            transform: [\r\n                {\r\n                    translateY: this.anim.interpolate({\r\n                        inputRange: [0, 1],\r\n                        outputRange: ['110%', '0%'],\r\n                    }),\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { color, data, type, dismissSnackbar } = this.props; // eslint-disable-line no-shadow\r\n\r\n        const { mount } = this.state;\r\n        const SnackbarComponent = snackbars[type];\r\n\r\n        return mount ? (\r\n            <Portal>\r\n                <Root style={this.rootStyle}>\r\n                    <SnackbarComponent color={color} data={data} onClose={dismissSnackbar} />\r\n                </Root>\r\n            </Portal>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    data: makeSelectSnackbarData(),\r\n    show: makeSelectShowSnackbar(),\r\n    type: makeSelectSnackbarType(),\r\n});\r\n\r\nexport default compose(\r\n    withTheme,\r\n    withRouter,\r\n    connect(\r\n        mapStateToProps,\r\n        { dismissSnackbar },\r\n    ),\r\n)(Snackbar);\r\n"]},"metadata":{},"sourceType":"module"}