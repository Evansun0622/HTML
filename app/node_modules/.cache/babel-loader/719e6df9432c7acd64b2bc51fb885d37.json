{"ast":null,"code":"import { all, call, put } from 'redux-saga/effects';\nimport shortid from 'shortid'; // Utils //\n\nimport history from 'utils/history';\nimport fetch from 'utils/fetch'; // Types //\n\nimport { LOGIN } from '../types';\nexport default function* ({\n  conferenceAlias,\n  data: {\n    username\n  }\n}) {\n  try {\n    username = username.toLowerCase().replace(/\\s/g, '_');\n    const {\n      data: {\n        token,\n        user\n      }\n    } = yield call(fetch, 'post', '/token', {\n      username\n    });\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('streamToken', token);\n\n    if (!conferenceAlias) {\n      conferenceAlias = shortid();\n    }\n\n    yield all([put({\n      type: LOGIN.SUCCESS,\n      user,\n      token\n    }), call(history.push, `/${conferenceAlias}`)]);\n  } catch (error) {\n    yield put({\n      type: LOGIN.ERROR,\n      error\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/Evan_/stream-dolby-voxeet/src/data/auth/sagas/loginRequest.js"],"names":["all","call","put","shortid","history","fetch","LOGIN","conferenceAlias","data","username","toLowerCase","replace","token","user","localStorage","setItem","JSON","stringify","type","SUCCESS","push","error","ERROR"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,oBAA/B;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,eAAe,WAAU;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAzB,CAAV,EAAmD;AAC9D,MAAI;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,WAAT,GAAuBC,OAAvB,CAA+B,KAA/B,EAAsC,GAAtC,CAAX;AAEA,UAAM;AACFH,MAAAA,IAAI,EAAE;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT;AADJ,QAEF,MAAMZ,IAAI,CAACI,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B;AACpCI,MAAAA;AADoC,KAA1B,CAFd;AAMAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA7B;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCH,KAApC;;AAEA,QAAI,CAACL,eAAL,EAAsB;AAClBA,MAAAA,eAAe,GAAGJ,OAAO,EAAzB;AACH;;AAED,UAAMH,GAAG,CAAC,CACNE,GAAG,CAAC;AACAgB,MAAAA,IAAI,EAAEZ,KAAK,CAACa,OADZ;AAEAN,MAAAA,IAFA;AAGAD,MAAAA;AAHA,KAAD,CADG,EAMNX,IAAI,CAACG,OAAO,CAACgB,IAAT,EAAgB,IAAGb,eAAgB,EAAnC,CANE,CAAD,CAAT;AAQH,GAxBD,CAwBE,OAAOc,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAAEZ,KAAK,CAACgB,KADN;AAEND,MAAAA;AAFM,KAAD,CAAT;AAIH;AACJ","sourcesContent":["import { all, call, put } from 'redux-saga/effects';\r\nimport shortid from 'shortid';\r\n\r\n// Utils //\r\nimport history from 'utils/history';\r\nimport fetch from 'utils/fetch';\r\n\r\n// Types //\r\nimport { LOGIN } from '../types';\r\n\r\nexport default function*({ conferenceAlias, data: { username } }) {\r\n    try {\r\n        username = username.toLowerCase().replace(/\\s/g, '_');\r\n\r\n        const {\r\n            data: { token, user },\r\n        } = yield call(fetch, 'post', '/token', {\r\n            username,\r\n        });\r\n\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('streamToken', token);\r\n\r\n        if (!conferenceAlias) {\r\n            conferenceAlias = shortid();\r\n        }\r\n\r\n        yield all([\r\n            put({\r\n                type: LOGIN.SUCCESS,\r\n                user,\r\n                token,\r\n            }),\r\n            call(history.push, `/${conferenceAlias}`),\r\n        ]);\r\n    } catch (error) {\r\n        yield put({\r\n            type: LOGIN.ERROR,\r\n            error,\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}